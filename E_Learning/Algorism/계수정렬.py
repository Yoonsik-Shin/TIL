'''
계수 정렬
> 특정 조건이 부합할 때만 사용가능하지만 매우 빠르게 동작
> 데이터 크기범위가 제한되어 정수 형태로 표현할 수 있을 때만 사용가능
> 데이터 개수 : N, 데이터 최대값 : K 일때 최악의 경우에도 O(N+K) 보장
> 공간복잡도 : O(N+K)
> 때에 따라 심각한 비효율성 초래가능 (ex. 0과 999,999만 있는 리스트등)
> 동일한 값을 가지는 데이터가 여러번 등장할 때 효과적 (ex. 테스트 성적)
'''

'''
실행 로직
1. 가장 작은 데이터부터 가장 큰 데이터까지의 범위가 모두 담길 수 있도록 리스트를 생성
2. 데이터를 하나씩 확인하며 데이터의 값과 동일한 인덱스의 데이터 1씩 증가
3. 최종 리스트에 각 데이터가 몇 번 등장했는지 횟수 기록
4. 결과를 확인할 때는 리스트의 첫 번째 데이터부터 하나씩 그 값만큼 반복하여 인덱스를 출력
'''

# 코드
# 모든 원소의 값이 0보다 크거나 같다고 가정
array = [7, 5, 9, 0, 3, 1, 6, 2, 9, 1, 4, 8, 0, 5, 2]
# 모든 범위를 포함하는 리스트 선언 (모든 값은 0으로 초기화)
count = [0] * (max(array) + 1)

for i in range(len(array)):
    count[array[i]] += 1  # 각 데이터에 해당하는 인덱스의 값 증가

for i in range(len(count)): # 리스트에 기록된 정렬 정보 확인
    for j in range(count[i]):
        print(i, end=' ') # 띄어쓰기를 구분으로 등장한 횟수만큼 인덱스 출력